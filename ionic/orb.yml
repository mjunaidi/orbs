version: 2.1

description: |
  Build and publish hybrid Apps for iOS / Android
  Repository: https://github.com/okode/orbs

cache-key-gradle: &cache-key-gradle
  key: cache-gradle-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "package-lock.json" }}

cache-key-cocoapods: &cache-key-cocoapods
  key: cache-cocoapods-{{ .Environment.CIRCLE_JOB }}-{{ checksum "<< parameters.cocoapods-lock-path >>" }}

orbs:
  common: okode/common@volatile
  android: circleci/android@0.2.1

jobs:
  test:
    parameters:
      skip-tests:
        type: boolean
        default: false
      skip-lint:
        type: boolean
        default: false
      skip-e2e:
        type: boolean
        default: false
      persist-results:
        type: boolean
        default: false
      custom-npm-login:
        type: boolean
        default: false
    docker:
      - image: circleci/node:latest-browsers
    steps:
      - checkout
      - when: 
          condition: << parameters.custom-npm-login >>
          steps:
            - run:
                name: Fixing node_modules writting access
                command: sudo chown -R $(whoami) /usr/local/lib/node_modules && sudo chown -R $(whoami) /usr/local/bin/
            - common/custom-npm-login
      - common/npm-install
      - run:
          name: Type checking
          command: npx tsc --noEmit
      - unless:
          condition: << parameters.skip-lint >>
          steps:
            - run:
                name: Linting
                command: npx ng lint --force --format=json app > lint-results.json
      - unless:
          condition: << parameters.skip-tests >>
          steps:
            - run:
                name: Unit testing
                command: npm run test -- --configuration=ci
            - unless:
                condition: << parameters.skip-e2e >>
                steps:
                  - run:
                      name: E2E testing
                      command: npm run e2e
            - store_test_results:
                path: test-results
      - when:
          condition: << parameters.persist-results >>
          steps:
            - persist_to_workspace:
                root: .
                paths:
                  - node_modules
                  - test-results
                  - lint-results.json
                  - coverage
                  - www
  pwa:
    parameters:
      custom-npm-login:
        type: boolean
        default: false
      build-params:
        type: string
        default: "--prod"
      pwa-path:
        type: string
        default: "www"
      package-path:
        type: string
        default: "output"
    environment:
      NODE_OPTIONS: --max_old_space_size=6144
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Upgrading Node v13
          command: echo "source /opt/circleci/.nvm/nvm.sh &>/dev/null && nvm install 13" >> ${BASH_ENV}
      - when:
          condition: << parameters.custom-npm-login >>
          steps:
            - common/custom-npm-login
      - common/npm-install
      - run:
          name: Building
          command: npm run build -- --progress false << parameters.build-params >>
          no_output_timeout: 20m
      - run:
          name: Packaging
          command: |
            mkdir -p << parameters.package-path >>
            zip -r << parameters.package-path >>/pwa.zip << parameters.pwa-path >>
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.pwa-path >>
            - << parameters.package-path >>/pwa.zip
  ios:
    parameters:
      package-name:
        type: string
      team-id:
        type: string
      attach-workspace:
        type: boolean
        default: false
      development-provisioning-name:
        type: string
      distribution-provisioning-name:
        type: string
      development-signing-password:
        type: string
        default: ''
      distribution-signing-password:
        type: string
        default: ''
      cocoapods-lock-path:
        type: string
        default: ''
      cordova-version:
        type: string
        default: "latest"
      cocoapods-version:
        type: string
        default: "'>= 0'"
      fastlane-version:
        type: string
        default: "'>= 0'"
      xcode-version:
        type: string
        default: "11.4.0"
      dev-certs-repo-url:
        type: string
        default: ''
      dist-certs-repo-url:
        type: string
        default: ''
      ssh-permission-fingerprint:
        type: string
        default: ''
      custom-npm-login:
        type: boolean
        default: false
      update-brew:
        type: boolean
        default: false
      pwa-path:
        type: string
        default: "www"
    macos:
      xcode: "<< parameters.xcode-version >>"
    steps:
      - checkout
      - when:
          condition: << parameters.update-brew >>
          steps:
            - run:
                name: Updating Homebrew
                command: brew update
      - when:
          condition: << parameters.custom-npm-login >>
          steps:
            - common/custom-npm-login
      - common/npm-install
      - common/install-ios:
          cordova-version: << parameters.cordova-version >>
          cocoapods-version: << parameters.cocoapods-version >>
          fastlane-version: << parameters.fastlane-version >>
      - common/keychain:
          package-name: << parameters.package-name >>
          team-id: << parameters.team-id >>
          development-provisioning-name: << parameters.development-provisioning-name >>
          distribution-provisioning-name: << parameters.distribution-provisioning-name >>
          development-signing-password: << parameters.development-signing-password >>
          distribution-signing-password: << parameters.distribution-signing-password >>
          dev-certs-repo-url: << parameters.dev-certs-repo-url >>
          dist-certs-repo-url: << parameters.dist-certs-repo-url >>
          ssh-permission-fingerprint: << parameters.ssh-permission-fingerprint >>
      - when:
          condition: << parameters.cocoapods-lock-path >>
          steps:
            - restore_cache:
                << : *cache-key-cocoapods
            - run:
                name: Installing Cocoapods dependencies
                command: pod setup
      - when:
          condition: << parameters.attach-workspace >>
          steps:
            - attach_workspace:
                at: .
            - run:
                name: Clearing sourcemaps
                command: find << parameters.pwa-path  >> -name *.map -type f -delete
      - run:
          name: Building
          command: scripts/build.sh
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output/*.ipa
      - when:
          condition: << parameters.cocoapods-lock-path >>
          steps:
            - run:
                name: Restoring << parameters.cocoapods-lock-path >>
                command: git checkout << parameters.cocoapods-lock-path >>
            - save_cache:
                << : *cache-key-cocoapods
                paths:
                  - ~/.cocoapods
      - run:
          name: Deploying
          command: scripts/deploy.sh
  android:
    parameters:
      attach-workspace:
        type: boolean
        default: false
      cordova-version:
        type: string
        default: "latest"
      api-version:
        type: string
        default: "29"
      gradle-version:
        type: string
        default: "6.2.2"
      dist-certs-repo-url:
        type: string
        default: ''
      ssh-permission-fingerprint:
        type: string
        default: ''
      custom-npm-login:
        type: boolean
        default: false
      pwa-path:
        type: string
        default: "www"
    executor:
      name: android/android
      sdk-version: '29'
      variant: 'node'
    steps:
      - checkout
      - android/accept-licenses
      - when:
          condition: << parameters.custom-npm-login >>
          steps:
            - run:
                name: Logging into custom NPM registry
                command: sudo npm install -g npm-cli-adduser && npm-cli-adduser
      - common/npm-install
      - common/install-android:
          gradle-version: << parameters.gradle-version >>
          cordova-version: << parameters.cordova-version >>
      - restore_cache:
          << : *cache-key-gradle
      - when:
          condition: << parameters.attach-workspace >>
          steps:
            - attach_workspace:
                at: .
            - run:
                name: Clearing sourcemaps
                command: find << parameters.pwa-path >> -name *.map -type f -delete
      - common/keystores:
          dist-certs-repo-url: << parameters.dist-certs-repo-url >>
          ssh-permission-fingerprint: << parameters.ssh-permission-fingerprint >>
      - run:
          name: Building
          command: scripts/build.sh
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output/*.apk
            - output/*.aab
      - run:
          name: Restoring package-lock.json
          command: git checkout package-lock.json
      - save_cache:
          << : *cache-key-gradle
          paths:
            - ~/.gradle/caches
      - run:
          name: Deploying
          command: scripts/deploy.sh
          no_output_timeout: 20m
