version: 2.1

description: |
  Build and publish hybrid Apps for iOS / Android
  Repository: https://github.com/okode/orbs

orbs:
  common: fwmovilidad/common@volatile
  android: circleci/android@0.2.1
  gradle: circleci/gradle@2.1.0

jobs:
  test:
    parameters:
      node-version:
        type: string
        default: '14'
      skip-tests:
        type: boolean
        default: false
      skip-lint:
        type: boolean
        default: false
      skip-e2e:
        type: boolean
        default: false
      custom-npm-login:
        type: boolean
        default: false
      persist-results:
        description: Deprecated
        type: boolean
        default: false
      skip-sonar:
        description: Deprecated
        type: boolean
        default: false
      build-params:
        description: Deprecated
        type: string
        default: 'deprecated'
      working-directory:
        type: string
        default: ~/project
    working_directory: << parameters.working-directory >>
    executor:
      name: common/node-browsers
      node-version: << parameters.node-version >>
    steps:
      - run:
          name: Checking deprecated parameters
          command: |
            if [[ << parameters.skip-sonar >> ]]; then
              echo "
              Parameter skip-sonar is deprecated, use sonar job instead:
              - common/sonar:
                  name: sonar
                  attach-workspace: true
              "
            fi
            if [[ "<< parameters.build-params >>" != "deprecated" ]]; then
              echo "Parameter build-params is deprecated"
            fi
            if [[ << parameters.persist-results >> ]]; then
              echo "Parameter persist-results is deprecated"
            fi
      - checkout:
          path: ~/project
      - when: 
          condition: << parameters.custom-npm-login >>
          steps:
            - run:
                name: Fixing node_modules writting access
                command: sudo chown -R $(whoami) /usr/local/lib/node_modules && sudo chown -R $(whoami) /usr/local/bin/
            - common/custom-npm-login
      - common/npm-install
      - run:
          name: Type checking
          command: npx tsc --noEmit
      - unless:
          condition: << parameters.skip-lint >>
          steps:
            - run:
                name: Linting
                command: npx ng lint --force --format=json app > lint-results.json
      - unless:
          condition: << parameters.skip-tests >>
          steps:
            - run:
                name: Unit testing
                command: npm run test -- --configuration=ci
            - unless:
                condition: << parameters.skip-e2e >>
                steps:
                  - run:
                      name: E2E testing
                      command: npm run e2e
            - store_test_results:
                path: test-results
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - test-results
            - lint-results.json
            - coverage
            - www
  pwa:
    parameters:
      node-version:
        type: string
        default: '14'
      custom-npm-login:
        type: boolean
        default: false
      build-params:
        type: string
        default: '--prod'
      pwa-path:
        type: string
        default: 'www'
      package-path:
        description: Deprecated
        type: string
        default: 'deprecated'
      working-directory:
        type: string
        default: ~/project
    working_directory: << parameters.working-directory >>
    executor:
      name: common/node-machine
    steps:
      - run:
          name: Checking deprecated parameters
          command: |
            if [[ "<< parameters.package-path >>" != "deprecated" ]]; then
              echo "Parameter package-path is deprecated"
            fi
      - checkout:
          path: ~/project
      - run:
          name: Upgrading Node v<< parameters.node-version >>
          command: echo "source /opt/circleci/.nvm/nvm.sh &>/dev/null && nvm install << parameters.node-version >>" >> ${BASH_ENV}
      - when:
          condition: << parameters.custom-npm-login >>
          steps:
            - common/custom-npm-login
      - common/npm-install
      - run:
          name: Building
          command: npm run build -- --progress false << parameters.build-params >>
          no_output_timeout: 20m
      - run:
          name: Packaging
          command: |
            mkdir -p output
            zip -r output/pwa.zip << parameters.pwa-path >>
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.pwa-path >>
            - output/pwa.zip
  ios:
    parameters:
      package-name:
        type: string
      team-id:
        type: string
      attach-workspace:
        type: boolean
        default: false
      development-provisioning-name:
        type: string
      distribution-provisioning-name:
        type: string
      development-signing-password:
        type: string
        default: ''
      distribution-signing-password:
        type: string
        default: ''
      node-version:
        type: enum
        default: ''
        enum: [ '12', '' ]
      cordova-version:
        type: string
        default: 'latest'
      cocoapods-version:
        type: string
        default: "'>= 0'"
      fastlane-version:
        type: string
        default: "'>= 0'"
      xcode-version:
        type: string
        default: '11.5.0'
      dev-certs-repo-url:
        type: string
        default: ''
      dist-certs-repo-url:
        type: string
        default: ''
      ssh-permission-fingerprint:
        type: string
        default: ''
      custom-npm-login:
        type: boolean
        default: false
      update-brew:
        type: boolean
        default: false
      pwa-path:
        type: string
        default: 'www'
      cocoapods-lock-path:
        description: Deprecated
        type: string
        default: 'deprecated'
      working-directory:
        type: string
        default: ~/project
    working_directory: << parameters.working-directory >>
    macos:
      xcode: "<< parameters.xcode-version >>"
    steps:
      - run:
          name: Checking deprecated parameters
          command: |
            if [[ "<< parameters.cocoapods-lock-path >>" != "deprecated" ]]; then
              echo "Parameter cocoapods-lock-path is deprecated";
            fi
      - checkout:
          path: ~/project
      - when:
          condition: << parameters.update-brew >>
          steps:
            - run:
                name: Updating Homebrew
                command: brew update
      - when:
          condition: << parameters.node-version >>
          steps:
            - run:
                name: Using Node v<< parameters.node-version >>
                command: |
                  brew unlink node
                  brew install node@<< parameters.node-version >>
                  brew link --overwrite --force node@<< parameters.node-version >>
      - unless:
          condition: << parameters.node-version >>
          steps:
            - run:
                name: Upgrading Node to latest version
                command: brew upgrade node
      - when:
          condition: << parameters.custom-npm-login >>
          steps:
            - common/custom-npm-login
      - common/npm-install
      - common/install-ios:
          cordova-version: << parameters.cordova-version >>
          cocoapods-version: << parameters.cocoapods-version >>
          fastlane-version: << parameters.fastlane-version >>
      - common/keychain:
          package-name: << parameters.package-name >>
          team-id: << parameters.team-id >>
          development-provisioning-name: << parameters.development-provisioning-name >>
          distribution-provisioning-name: << parameters.distribution-provisioning-name >>
          development-signing-password: << parameters.development-signing-password >>
          distribution-signing-password: << parameters.distribution-signing-password >>
          dev-certs-repo-url: << parameters.dev-certs-repo-url >>
          dist-certs-repo-url: << parameters.dist-certs-repo-url >>
          ssh-permission-fingerprint: << parameters.ssh-permission-fingerprint >>
      - when:
          condition: << parameters.attach-workspace >>
          steps:
            - attach_workspace:
                at: .
            - run:
                name: Clearing sourcemaps
                command: find << parameters.pwa-path  >> -name *.map -type f -delete
      - run:
          name: Building
          command: |
            if [[ -f "scripts/build.sh" ]]; then
              scripts/build.sh
            else
              npm run ci:build
            fi
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output/*.ipa
      - run:
          name: Deploying
          command: |
            if [[ -f "scripts/deploy.sh" ]]; then
              scripts/deploy.sh
            else
              npm run ci:deploy
            fi
  android:
    parameters:
      attach-workspace:
        type: boolean
        default: false
      node-version:
        type: string
        default: '14'
      cordova-version:
        type: string
        default: 'latest'
      gradle-version:
        type: string
        default: ''
      dist-certs-repo-url:
        type: string
        default: ''
      ssh-permission-fingerprint:
        type: string
        default: ''
      custom-npm-login:
        type: boolean
        default: false
      pwa-path:
        type: string
        default: 'www'
      api-version:
        description: Deprecated
        type: string
        default: 'deprecated'
      working-directory:
        type: string
        default: ~/project
    working_directory: << parameters.working-directory >>
    executor:
      name: android/android
      sdk-version: '29'
      variant: 'node'
    steps:
      - run:
          name: Checking deprecated parameters
          command: |
            if [[ "<< parameters.api-version >>" != "deprecated" ]]; then
              echo "Parameter api-version is deprecated"
            fi
      - checkout:
          path: ~/project
      - run:
          name: Upgrading Node v<< parameters.node-version >>
          command: |
            sudo npm i -g n
            sudo n << parameters.node-version >>
      - when:
          condition: << parameters.custom-npm-login >>
          steps:
            - run:
                name: Logging into custom NPM registry
                command: sudo npm install -g npm-cli-adduser && npm-cli-adduser
      - common/npm-install
      - common/install-android:
          gradle-version: << parameters.gradle-version >>
          cordova-version: << parameters.cordova-version >>
      - when:
          condition: << parameters.attach-workspace >>
          steps:
            - attach_workspace:
                at: .
            - run:
                name: Clearing sourcemaps
                command: find << parameters.pwa-path >> -name *.map -type f -delete
      - common/keystores:
          dist-certs-repo-url: << parameters.dist-certs-repo-url >>
          ssh-permission-fingerprint: << parameters.ssh-permission-fingerprint >>
      - gradle/with_cache:
          steps:
            - run:
                name: Building
                command: |
                  if [[ -f "scripts/build.sh" ]]; then
                    scripts/build.sh
                  else
                    npm run ci:build
                  fi
                no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output/*.apk
            - output/*.aab
      - run:
          name: Deploying
          command: |
            if [[ -f "scripts/deploy.sh" ]]; then
              scripts/deploy.sh
            else
              npm run ci:deploy
            fi
          no_output_timeout: 20m
