version: 2.1

description: |
  Build and publish hybrid Apps based on Ionic for iOS / Android
  Repository: https://github.com/okode/orbs

cache-key-gradle: &cache-key-gradle
  key: cache-gradle-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "package-lock.json" }}

cache-key-cocoapods: &cache-key-cocoapods
  key: cache-cocoapods-{{ .Environment.CIRCLE_JOB }}-{{ checksum "<< parameters.cocoapods-lock-path >>" }}

orbs:
  common: okode/common@dev:first

jobs:
  test:
    parameters:
      skip-tests:
        type: boolean
        default: false
      skip-lint:
        type: boolean
        default: false
      skip-sonar:
        type: boolean
        default: false
      persist-results:
        type: boolean
        default: false
    docker:
      - image: circleci/openjdk:8-node-browsers
    steps:
      - checkout
      - common/node-upgrade
      - common/npm-install
      - run:
          name: Building
          command: npm run build -- --progress false --aot
      - unless:
          condition: << parameters.skip-tests >>
          steps:
            - common/chrome-upgrade
            - run:
                name: Running unit tests
                command: npm run test -- --configuration ci
            - run:
                name: Running e2e tests
                command: npm run e2e
            - store_test_results:
                path: test-results
      - unless:
          condition: << parameters.skip-lint >>
          steps:
            - run:
                name: Running lint
                command: npx ng lint --force --format=json app > lint-results.json
      - unless:
          condition: << parameters.skip-sonar >>
          steps:
            - common/sonar
      - when:
          condition: << parameters.persist-results >>
          steps:
            - persist_to_workspace:
                root: .
                paths:
                  - node_modules
                  - test-results
                  - lint-results.json
                  - coverage
                  - www
  pwa:
    parameters:
      node-version:
        type: string
        default: "12"
    machine: true
    environment:
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - checkout
      - run:
          name: Upgrading Node to version << parameters.node-version >> using nvm
          command: echo "source /opt/circleci/.nvm/nvm.sh &>/dev/null && nvm install << parameters.node-version >>" >> ${BASH_ENV}
      - common/npm-install
      - run:
          name: Building
          command: npm run build -- --progress false --prod
          no_output_timeout: 20m
      - persist_to_workspace:
          root: .
          paths:
            - www
  ios:
    parameters:
      package-name:
        type: string
      team-id:
        type: string
      attach-workspace:
        type: boolean
        default: false
      development-provisioning-name:
        type: string
      distribution-provisioning-name:
        type: string
      development-signing-password:
        type: string
      distribution-signing-password:
        type: string
      cocoapods-lock-path:
        type: string
        default: ''
      cordova-version:
        type: string
        default: "8"
    macos:
      xcode: "10.3.0"
    steps:
      - checkout
      - common/npm-install
      - common/install-ios:
          cordova-version: << parameters.cordova-version >>
      - common/keychain:
          package-name: << parameters.package-name >>
          team-id: << parameters.team-id >>
          development-provisioning-name: << parameters.development-provisioning-name >>
          distribution-provisioning-name: << parameters.distribution-provisioning-name >>
          development-signing-password: << parameters.development-signing-password >>
          distribution-signing-password: << parameters.distribution-signing-password >>
      - when:
          condition: << parameters.cocoapods-lock-path >>
          steps:
            - restore_cache:
                << : *cache-key-cocoapods
            - run:
                name: Installing Cocoapods dependencies
                command: pod setup
      - when:
          condition: << parameters.attach-workspace >>
          steps:
            - attach_workspace:
                at: .
            - run:
                name: Clearing sourcemaps
                command: find www -name *.map -type f -delete
      - run:
          name: Building
          command: scripts/build.sh
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output
      - when:
          condition: << parameters.cocoapods-lock-path >>
          steps:
            - run:
                name: Restoring << parameters.cocoapods-lock-path >>
                command: git checkout << parameters.cocoapods-lock-path >>
            - save_cache:
                << : *cache-key-cocoapods
                paths:
                  - ~/.cocoapods
      - run:
          name: Deploying
          command: scripts/deploy.sh
  android:
    parameters:
      attach-workspace:
        type: boolean
        default: false
      cordova-version:
        type: string
        default: "8"
      api-version:
        type: string
        default: "28"
    docker:
      - image: circleci/android:api-<< parameters.api-version >>-node
    steps:
      - checkout
      - common/node-upgrade
      - common/npm-install
      - common/install-android:
          cordova-version: << parameters.cordova-version >>
      - restore_cache:
          << : *cache-key-gradle
      - when:
          condition: << parameters.attach-workspace >>
          steps:
            - attach_workspace:
                at: .
            - run:
                name: Clearing sourcemaps
                command: find www -name *.map -type f -delete
      - run:
          name: Building
          command: scripts/build.sh
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output
      - run:
          name: Restoring package-lock.json
          command: git checkout package-lock.json
      - save_cache:
          << : *cache-key-gradle
          paths:
            - ~/.gradle/caches
      - run:
          name: Deploying
          command: scripts/deploy.sh
