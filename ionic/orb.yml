version: 2.1

description: |
  Build and publish hybrid Apps based on Ionic for iOS / Android
  Repository: https://github.com/okode/orbs

cache-key-npm: &cache-key-npm
  key: cache-npm-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "package-lock.json" }}

cache-key-gradle: &cache-key-gradle
  key: cache-gradle-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_BRANCH }}-{{ checksum "plugins/fetch.json" }}

cache-key-cocoapods: &cache-key-cocoapods
  key: cache-cocoapods-{{ .Environment.CIRCLE_JOB }}-{{ checksum "plugins/fetch.json" }}

orbs:
  common: okode/common@dev:first

executors:
  node:
    docker:
      - image: circleci/node:12
  java-node:
    docker:
      - image: circleci/openjdk:8-node-browsers
  android:
    docker:
      - image: circleci/android:api-28-node
  ios:
    macos:
      xcode: "10.2.1"

jobs:
  test:
    parameters:
      skip-tests:
        type: boolean
        default: false
      skip-lint:
        type: boolean
        default: false
    executor: java-node
    steps:
      - checkout
      - run:
          name: Upgrading Node version 12
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get -qq install -y nodejs
            sudo rm -f /usr/local/bin/node /usr/local/bin/npm /usr/local/bin/npx
            sudo ln -s /usr/bin/node /usr/local/bin
            sudo ln -s /usr/bin/npm /usr/local/bin
            sudo ln -s /usr/bin/npx /usr/local/bin
      - restore_cache:
          << : *cache-key-npm
      - run:
          name: Installing NPM dependencies
          command: if [ ! -d "node_modules" ]; then npm ci; fi
      - run:
          name: Restoring package-lock.json
          command: git checkout package-lock.json
      - save_cache:
          << : *cache-key-npm
          paths:
            - node_modules
      - run:
          name: Building
          command: npm run build -- --progress false --aot
      - unless:
          condition: << parameters.skip-tests >>
          steps:
            - run:
                name: Updating Chrome
                command: |
                  wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
                  sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
                  sudo apt-get update
                  sudo apt-get install google-chrome-stable
            - run:
                name: Running unit tests
                command: npm run test -- --configuration ci
            - run:
                name: Running e2e tests
                command: npm run e2e
            - store_test_results:
                path: test-results
      - unless:
          condition: << parameters.skip-lint >>
          steps:
            - run:
                name: Running lint
                command: npx ng lint --force --format=json app > lint-results.json
      - common/sonar
  ios:
    parameters:
      dev-signing-password:
        type: string
      dist-signing-password:
        type: string
      pod-setup:
        type: boolean
        default: false
    executor: ios
    steps:
      - checkout
      - restore_cache:
          << : *cache-key-npm
      - run:
          name: Installing NPM dependencies
          command: if [ ! -d "node_modules" ]; then npm ci; fi
      - run:
          name: Restoring package-lock.json
          command: git checkout package-lock.json
      - save_cache:
          << : *cache-key-npm
          paths:
            - node_modules
      - run:
          name: Installing CI dependencies
          command: npx cci ci install
      - run:
          name: Installing Certificates
          command: npx cci ci keychain << parameters.dev-signing-password >> << parameters.dist-signing-password >>
      - when:
          condition: << parameters.pod-setup >>
          steps:
            - restore_cache:
                << : *cache-key-cocoapods
            - run:
                name: Installing Cocoapods dependencies
                command: pod setup
      - run:
          name: Building
          command: scripts/build.sh
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output
      - when:
          condition: << parameters.pod-setup >>
          steps:
            - run:
                name: Restoring plugins/fetch.json
                command: git checkout plugins/fetch.json
            - save_cache:
                << : *cache-key-cocoapods
                paths:
                  - ~/.cocoapods
      - run:
          name: Deploying
          command: scripts/deploy.sh
  android:
    executor: android
    steps:
      - checkout
      - run:
          name: Upgrading Node version 12
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get -qq install -y nodejs
            sudo rm -f /usr/local/bin/node /usr/local/bin/npm /usr/local/bin/npx
            sudo ln -s /usr/bin/node /usr/local/bin
            sudo ln -s /usr/bin/npm /usr/local/bin
            sudo ln -s /usr/bin/npx /usr/local/bin
      - restore_cache:
          << : *cache-key-npm
      - run:
          name: Installing NPM dependencies
          command: if [ ! -d "node_modules" ]; then npm install; fi
      - run:
          name: Restoring package-lock.json
          command: git checkout package-lock.json
      - save_cache:
          << : *cache-key-npm
          paths:
            - node_modules
      - run:
          name: Installing CI dependencies
          command: npx cci ci install
      - restore_cache:
          << : *cache-key-gradle
      - run:
          name: Building
          command: scripts/build.sh
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - output
      - run:
          name: Restoring plugins/fetch.json
          command: git checkout plugins/fetch.json
      - save_cache:
          << : *cache-key-gradle
          paths:
            - ~/.gradle/caches
      - run:
          name: Deploying
          command: scripts/deploy.sh
